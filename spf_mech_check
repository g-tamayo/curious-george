## SPF
import DNS, re

class SPF_Record:

    def __init__(self, domain):
        self.domain = domain
        self.txt = self.txt_retrieve()
        self.spf = self.spf_retrieve()
        self.spf_version, self.mechanisms, self.spf_flag = self.mechanisms_retrieve()

    def txt_retrieve(self):
        return DNS.dnslookup(self.domain, 'txt')

    def spf_retrieve(self):
        for record in self.txt:
            if 'v=spf1' in record[0].decode('utf-8'):
                return record[0].decode('utf-8')
            else:
                return None

    def mechanisms_retrieve(self):
        spfv, *mechs, flag = self.spf.split()
        return spfv, mechs, flag

test = SPF_Record('gmail.com')
print(test.spf)
print(test.mechanisms)

def spf_lookup(ip, domain):
    txt = DNS.dnslookup(domain,'txt')
    if any('v=spf1' in txt for txt in txt):
        spf = [s for s in txt if 'v=spf1' in s]
        print(spf[0])
    spfv, *mechs, flag = spf[0].split()
    return ip_check(ip, mechs)

def ip_check(ip,list_of_mechanisms):
    if re.match('[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+',ip):
        return ipv4_check(ip, list_of_mechanisms)
    elif re.match('([0-9A-Za-z]+:+)+[0-9a-zA-Z]+',ip):
        return ipv6_check(ip, list_of_mechanisms)

def ipv4_check(ip4, mechanisms):
    ## Check ipv4 for a match in mechanisms
    for check in mechanisms:
        mech_temp = check.split(':')
        if mech_temp[0] == 'ip6':
            continue
        elif mech_temp[0] == 'ip4':
            if ip4_check(ip4, mech_temp[1]) == True:
                return check
        if mech_temp[0] == 'a':
            if a_check(ip4, mech_temp[1]) == True:
                return check
        if mech_temp[0] == 'mx':
            if mx_check(ip4, mech_temp[1]) == True:
                return check
        if mech_temp[0] == 'ptr':
            if ptr_check(ip4, mech_temp[1]) == True:
                return check
        if mech_temp[0] == 'exists':
            if exists_check == True:
                return check
        if mech_temp[0] == 'include':
            if include_check == True:
                return check
        if mech_temp[0] == 'redirect':

                return check


'''
def ipv6_check(ip6, mechnaisms):
    ## Check ipv6 for a match in mechanisms

'''
